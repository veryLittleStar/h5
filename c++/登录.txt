登录消息流程

C-S
	登录包
S-C
	 1-3-4-5-6
	 2

-------------------------------------------------------------------------------------------------------
1.登录成功

消息ID
MDM_GP_LOGON  = 1
SUB_GP_LOGON_SUCCESS = 100

数据结构
struct CMD_GP_LogonSuccess
{
	//属性资料
	WORD							wFaceID;							//头像标识
	DWORD							dwUserID;							//用户 I D
	DWORD							dwGameID;							//游戏 I D
	DWORD							dwGroupID;							//社团标识
	DWORD							dwCustomID;							//自定标识
	DWORD							dwUserMedal;						//用户奖牌
	DWORD							dwExperience;						//经验数值
	DWORD							dwLoveLiness;						//用户魅力

	//用户成绩
	SCORE							lUserScore;							//用户金币
	SCORE							lUserInsure;						//用户银行

	//用户信息
	BYTE							cbGender;							//用户性别
	BYTE							cbMoorMachine;						//锁定机器
	TCHAR							szAccounts[32];						//登录帐号
	TCHAR							szNickName[32];						//用户昵称
	TCHAR							szGroupName[32];					//社团名字

	//配置信息
	BYTE                            cbShowServerStatus;                 //显示服务器状态
};
-------------------------------------------------------------------------------------------------------
2.登录失败

消息ID
MDM_GP_LOGON  = 1
SUB_GP_LOGON_FAILURE = 101

数据结构
struct CMD_GP_LogonFailure
{
	LONG							lResultCode;						//错误代码
	TCHAR							szDescribeString[128];				//描述消息
};
-------------------------------------------------------------------------------------------------------
3.游戏类型

消息ID
MDM_GP_SERVER_LIST  = 2	//列表信息					
SUB_GP_LIST_KIND = 101 	//游戏种类列表

数据结构 * N  有几个游戏,数据部分长度就是这个结构的几倍
struct tagClientGameKind
{
	WORD							wGameID;							//游戏id
	DWORD							dwOnLineCount;						//在线人数
	DWORD							dwFullCount;						//满员人数
	TCHAR							szKindName[32];						//游戏名字
};
-------------------------------------------------------------------------------------------------------
4.游戏房间信息

消息ID
MDM_GP_SERVER_LIST  = 2	//列表信息					
SUB_GP_LIST_SERVER = 104 	//游戏种类列表

数据结构 * N  有几个房间,数据部分长度就是这个结构的几倍
struct tagGameServer
{
	WORD							wKindID;							//名称索引(3里面的游戏id)
	WORD							wNodeID;							//节点索引(忽略)
	WORD							wSortID;							//排序索引(忽略)
	WORD							wServerID;							//房间索引
	WORD							wServerPort;						//房间端口
	DWORD							dwOnLineCount;						//在线人数
	DWORD							dwFullCount;						//满员人数
	TCHAR							szServerAddr[32];					//IP
	TCHAR							szServerName[LEN_SERVER];			//房间名称
};
-------------------------------------------------------------------------------------------------------
5.游戏列表发送完毕标识

消息ID
MDM_GP_SERVER_LIST  = 2		//列表信息					
SUB_GP_LIST_FINISH = 104 	//游戏列表发送完成

-------------------------------------------------------------------------------------------------------
6.登录完成

消息ID
MDM_GP_LOGON  = 1					
SUB_GP_LOGON_FINISH = 102 	//登录完成

数据结构(先忽略)
struct CMD_GP_LogonFinish
{
	WORD							wIntermitTime;						//中断时间
	WORD							wOnLineCountTime;					//更新时间
};

-------------------------------------------------------------------------------------------------------





















